C51 COMPILER V9.00   MAIN                                                                  08/31/2019 11:15:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil4_51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******************************************************************************
   2          ----------------本例程仅供学习使用，未经作者允许，不得用于其他用途。-----------
   3          ------------------------版权所有，仿冒必究！-----------------------------------
   4          ----------------淘宝网址：Ilovemcu.taobao.com----------------------------------
   5              STC89C52/STC12C5A60S2带液晶接口的最小系统：
   6                  https://item.taobao.com/item.htm?id=26410708738
   7              FSR薄膜压力传感器 圆形：
   8                  https://item.taobao.com/item.htm?id=564232635110
   9              FSR薄膜压力传感器 长条形：
  10                  https://item.taobao.com/item.htm?id=564085737164
  11              杜邦线：
  12                  https://item.taobao.com/item.htm?id=562848773709
  13                  LCD1602液晶：
  14                          https://item.taobao.com/item.htm?id=21282627385
  15          ------------------作者：神秘藏宝室---------------------------------------------*/
  16          #include "main.h"
  17          #include "LCD1602.h"
  18          unsigned int ADC_Buffer = 0;
  19          long PRESS_AO = 0;
  20          int VOLTAGE_AO = 0;
  21          
  22          //下面4项内容需要根据实际型号和量程修正
  23          
  24          //最小量程 根据具体型号对应手册获取,单位是g，这里以RP-18.3-ST型号为例，最小量程是20g
  25          #define PRESS_MIN       20
  26          //最大量程 根据具体型号对应手册获取,单位是g，这里以RP-18.3-ST型号为例，最大量程是6kg
  27          #define PRESS_MAX       6000
  28          
  29          //以下2个参数根据获取方法：
  30          //理论上：
  31          // 1.薄膜压力传感器不是精准的压力测试传感器，只适合粗略测量压力用，不能当压力计精确测量。
  32          // 2. AO引脚输出的电压有效范围是0.1v到3.3v，而实际根据不同传感器范围会在这个范围内，并不一定是最大值3.3v，
             -也可能低于3.3v，要实际万用表测量，
  33          //      例程只是给出理论值，想要精确请自行万用表测量然后修正以下2个AO引脚电压输出的最大和最小值
  34          //调节方法：
  35          //薄膜压力传感器的AO引脚输出的增益范围是通过板载AO_RES电位器调节实现的，
  36          //想要稍微精准点，需要自己给定具体已知力，然后调节AO_RES电位器到串口输出重量正好是自己给定力就可以了
  37          #define VOLTAGE_MIN 100
  38          #define VOLTAGE_MAX 3300
  39          
  40          //****************************************************
  41          //主函数
  42          //****************************************************
  43          void main()
  44          {
  45   1              ADC_CONTR = ADC_360T | ADC_ON;
  46   1              AUXR1 |= ADRJ;                                                                  //ADRJ = 1;                     //10bitAD右对齐
  47   1              Init_LCD1602();                                                                 //初始化LCD1602
  48   1              LCD1602_write_com(0x80);                                                //指针设置到
  49   1              LCD1602_write_word("Welcome to use!");                  //显示内容
  50   1      
  51   1      
  52   1              LCD1602_write_com(0x01);                                //清屏
  53   1      
  54   1              while(1)
C51 COMPILER V9.00   MAIN                                                                  08/31/2019 11:15:39 PAGE 2   

  55   1              {
  56   2                      LCD1602_write_com(0x80);                                                //指针设置到第一行
  57   2                      LCD1602_write_word("Initialize OK!");                   //显示内容
  58   2      
  59   2                      ADC_Buffer = adc10_start(0);            // P1.0 ADC
  60   2      
  61   2                      VOLTAGE_AO = map(ADC_Buffer, 0, 1023, 0, 5000);
  62   2      
  63   2                      if(VOLTAGE_AO < VOLTAGE_MIN)
  64   2                      {
  65   3                              PRESS_AO = 0;
  66   3                      }
  67   2                      else if(VOLTAGE_AO > VOLTAGE_MAX)
  68   2                      {
  69   3                              PRESS_AO = PRESS_MAX;
  70   3                      }
  71   2                      else
  72   2                      {
  73   3                              PRESS_AO = map(VOLTAGE_AO, VOLTAGE_MIN, VOLTAGE_MAX, PRESS_MIN, PRESS_MAX);
  74   3                      }
  75   2      
  76   2                      LCD1602_write_com(0x80+0x40);                                   //指针设置
  77   2                      LCD1602_write_word("F = ");                     //显示内容
  78   2                      LCD1602_write_data(PRESS_AO/10000+0x30);                        //显示内容
  79   2                      LCD1602_write_data(PRESS_AO%10000/1000+0x30);                   //显示内容
  80   2                      LCD1602_write_data(PRESS_AO%1000/100+0x30);
  81   2                      LCD1602_write_data(PRESS_AO%100/10+0x30);
  82   2                      LCD1602_write_data(PRESS_AO%10+0x30);
  83   2                      LCD1602_write_word(" g");       
  84   2                      
  85   2                      if( Sensor_DO == 0 )            //检测比较器输出
  86   2                      {
  87   3                              LED1 = LED_ON;
  88   3                      }
  89   2                      else
  90   2                      {
  91   3                              LED1 = LED_OFF; 
  92   3                      }
  93   2                      Delay_ms(100);          
  94   2              }
  95   1      }
  96          
  97          
  98          //map函数
  99          long map(long x, long in_min, long in_max, long out_min, long out_max) {
 100   1       return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 101   1      }
 102          
 103          //****************************************************
 104          //做一次ADC转换
 105          //****************************************************
 106          unsigned int adc10_start(unsigned char channel) //channel = 0~7
 107          {
 108   1              unsigned int    adc;
 109   1              unsigned char   i;
 110   1      
 111   1              P1ASF = (1 << channel);                 //12C5A60AD/S2系列模拟输入(AD)选择
 112   1      
 113   1              ADC_RES = 0;
 114   1              ADC_RESL = 0;
 115   1      
 116   1              ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel;
C51 COMPILER V9.00   MAIN                                                                  08/31/2019 11:15:39 PAGE 3   

 117   1              _nop_();
 118   1              _nop_();
 119   1              _nop_();
 120   1              _nop_();
 121   1               
 122   1      
 123   1      //      for(i=0; i<250; i++)            //13T/loop, 40*13=520T=23.5us @ 22.1184M
 124   1              i = 250;
 125   1              do{
 126   2                      if(ADC_CONTR & ADC_FLAG)
 127   2                      {
 128   3                              ADC_CONTR &= ~ADC_FLAG;                         //软件清零ADC_FLAG
 129   3                              _nop_();
 130   3                              _nop_();
 131   3                              _nop_();
 132   3                              _nop_();
 133   3                              adc = 0;
 134   3                              adc = (ADC_RES << 8) | ADC_RESL;        //ADRJ_enable()
 135   3      
 136   3      
 137   3                              return  adc;
 138   3                      }
 139   2              }while(--i);
 140   1              return  1024;
 141   1      }
 142          
 143          //****************************************************
 144          //MS延时函数(12M晶振下测试)
 145          //****************************************************
 146          void Delay_ms(unsigned int n)
 147          {
 148   1              unsigned int  i,j;
 149   1              for(i=0;i<n;i++)
 150   1                      for(j=0;j<123;j++);
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    607    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
